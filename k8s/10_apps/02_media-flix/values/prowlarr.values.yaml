controllers:
  prowlarr:
    replicas: 1
#    annotations:
#      reloader.stakater.com/auto: "true"

    pod:
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        runAsNonRoot: true
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
    initContainers:
      init-db:
        image:
          repository: ghcr.io/home-operations/postgres-init
          tag: 17
        env:
          INIT_POSTGRES_SUPER_PASS:
            valueFrom:
              secretKeyRef:
                name: postgres-superuser
                key: password
          INIT_POSTGRES_HOST: "postgres-rw.cloudnative-pg.svc.cluster.local"
        envFrom:
          - secretRef:
              name: prowlarr-init
    containers:
      app:
        image:
          repository: ghcr.io/home-operations/prowlarr
          tag: 2.1.5@sha256:affb671fa367f4b7029d58f4b7d04e194e887ed6af1cf5a678f3c7aca5caf6ca
        env:
          PROWLARR__APP__INSTANCENAME: Prowlarr
          PROWLARR__APP__THEME: dark
          PROWLARR__AUTH__METHOD: External
          PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
          PROWLARR__LOG__DBENABLED: "False"
          PROWLARR__LOG__LEVEL: info
          PROWLARR__SERVER__PORT: &prowlarrPort 80
          PROWLARR__UPDATE__BRANCH: master
          TZ: Europe/Amsterdam
          PROWLARR__POSTGRES__PORT: "5432"
          PROWLARR__POSTGRES__HOST: "postgres-rw.cloudnative-pg.svc.cluster.local"
        envFrom:
          - secretRef:
              name: prowlarr-secret
        probes:
          liveness:
            enabled: true
          readiness:
            enabled: true
          startup:
            enabled: true
            spec:
              failureThreshold: 30
              periodSeconds: 5
        resources:
          requests:
            cpu: 18m
            memory: 128Mi
          limits:
            memory: 512Mi
        ports:
          - name: http
            containerPort: *prowlarrPort
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL

starHostSuffix: &starHostSuffix "*.local.naguiar.dev"
hostSuffix: &hostSuffix "local.naguiar.dev"

rawResources:
  middleware:
    enabled: true
    apiVersion: traefik.io/v1alpha1
    kind: Middleware
    nameOverride: default-headers
    spec:
      spec:
        headers:
          browserXssFilter: true
          contentTypeNosniff: true
          forceSTSHeader: true
          stsIncludeSubdomains: true
          stsPreload: true
          stsSeconds: 15552000
          referrerPolicy: no-referrer
          contentSecurityPolicy: "default-src 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https: data:; connect-src 'self' https:; frame-src 'self' https:; media-src 'self' https:; object-src 'none'; frame-ancestors 'self'; base-uri 'self'; form-action 'self';"
          customFrameOptionsValue: SAMEORIGIN
          customRequestHeaders:
            X-Forwarded-Proto: https
  ingress-route:
    enabled: true
    apiVersion: traefik.io/v1alpha1
    kind: IngressRoute
    annotations:
      external-dns.alpha.kubernetes.io/target: 192.168.1.200
      kubernetes.io/ingress.class: traefik-external
    spec:
      spec:
        entryPoints:
          - websecure
        routes:
          - match: Host(`prowlarr.local.naguiar.dev`)
            kind: Rule
            middlewares:
              - name: prowlarr-default-headers
            services:
              - name: prowlarr
                port: *prowlarrPort
        tls:
          secretName: certificate-tls


service:
  app:
    controller: prowlarr
    ports:
      http:
        port: *prowlarrPort

persistence:
  config:
    type: emptyDir
  tmp:
    type: emptyDir
