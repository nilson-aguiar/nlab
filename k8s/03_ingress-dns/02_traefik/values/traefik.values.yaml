global:
  checkNewVersion: false
  # -- Please take time to consider whether or not you wish to share anonymous data with us
  # See https://doc.traefik.io/traefik/contributing/data-collection/
  sendAnonymousUsage: false


# -- Additional arguments to be passed at Traefik's binary
# See [CLI Reference](https://docs.traefik.io/reference/static-configuration/cli/)
# Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"
  - "--log.level=INFO"

deployment:
  enabled: true
  kind: DaemonSet
  replicas: 1
  shareProcessNamespace: false
  dnsPolicy: ""
  dnsConfig: {}

ports:
  # web:
    # redirectTo:
      # websecure:
  websecure:
    tls:
      enabled: true

# -- Create a default IngressClass for Traefik
ingressClass:  # @schema additionalProperties: false
  enabled: true
  isDefaultClass: false
  name: "traefik-external"

logs:
  access:
    enabled: false

experimental:
  # -- Enable traefik experimental plugins
  plugins: 
    sablier:
        moduleName: "github.com/sablierapp/sablier"
        version: "v1.8.1"

providers:  # @schema additionalProperties: false
  kubernetesCRD:
    # -- Load Kubernetes IngressRoute provider
    enabled: true
    # -- When the parameter is set, only resources containing an annotation with the same value are processed. 
    # -- Otherwise, resources missing the annotation, having an empty value, or the value traefik are processed. 
    # -- It will also set required annotation on Dashboard and Healthcheck IngressRoute when enabled.
    ingressClass: "traefik-external"

  kubernetesIngress:
    enabled: true

  kubernetesGateway:
    # -- Enable Traefik Gateway provider for Gateway API
    enabled: false
    # -- Toggles support for the Experimental Channel resources (Gateway API release channels documentation).
    # This option currently enables support for TCPRoute and TLSRoute.
    experimentalChannel: false
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.
    namespaces: []
    # -- A label selector can be defined to filter on specific GatewayClass objects only.
    labelselector: ""

  # file:
    # enabled: true

service:
  enabled: true
  type: LoadBalancer
  spec:
    loadBalancerIP: "192.168.1.200"

metrics:
  ## -- Enable metrics for internal resources. Default: false
  addInternals: true

  ## -- Prometheus is enabled by default.
  ## -- It can be disabled by setting "prometheus: null"
  prometheus:
    # -- Entry point used to expose metrics.
    entryPoint: metrics
    ## Enable metrics on entry points. Default: true
    addEntryPointsLabels:  # @schema type:[boolean, null]
    ## Enable metrics on routers. Default: false
    addRoutersLabels:  # @schema type:[boolean, null]
    ## Enable metrics on services. Default: true
    addServicesLabels:  # @schema type:[boolean, null]
    ## Buckets for latency metrics. Default="0.1,0.3,1.2,5.0"
    buckets: ""
    ## When manualRouting is true, it disables the default internal router in
    ## order to allow creating a custom router for prometheus@internal service.
    manualRouting: false
    service:
      # -- Create a dedicated metrics service to use with ServiceMonitor
      enabled: false
      labels: {}
      annotations: {}
    # -- When set to true, it won't check if Prometheus Operator CRDs are deployed
    disableAPICheck:  # @schema type:[boolean, null]
    serviceMonitor:
      # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
      enabled: false
      metricRelabelings: []
      relabelings: []
      jobLabel: ""
      interval: ""
      honorLabels: false
      scrapeTimeout: ""
      honorTimestamps: false
      enableHttp2: false
      followRedirects: false
      additionalLabels: {}
      namespace: ""
      namespaceSelector: {}
    prometheusRule:
      # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
      enabled: false
      additionalLabels: {}
      namespace: ""

  otlp:
    # -- Set to true in order to enable the OpenTelemetry metrics
    enabled: true
    # -- Enable metrics on entry points. Default: true
    # addEntryPointsLabels:  # @schema type:[boolean, null]
    # -- Enable metrics on routers. Default: false
    # addRoutersLabels:  # @schema type:[boolean, null]
    # -- Enable metrics on services. Default: true
    # addServicesLabels:  # @schema type:[boolean, null]
    # -- Explicit boundaries for Histogram data points. Default: [.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10]
    # explicitBoundaries: []
    # -- Interval at which metrics are sent to the OpenTelemetry Collector. Default: 10s
    # pushInterval: "10s"
    # -- Service name used in OTLP backend. Default: traefik.
    # serviceName:  traefik # @schema type:[string, null]
    http:
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      enabled: true
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      endpoint: http://opentelemetry-collector.monitoring.svc.cluster.local:4318/v1/metrics
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      headers: {}
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
      tls:
        insecureSkipVerify: true # @schema type:[boolean, null]
    grpc:
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      enabled: false
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      endpoint: ""
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      insecure: false
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
      tls:
        # -- The path to the certificate authority, it defaults to the system bundle.
        ca: ""
        # -- The path to the public certificate. When using this option, setting the key option is required.
        cert: ""
        # -- The path to the private key. When using this option, setting the cert option is required.
        key: ""
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
        insecureSkipVerify: false

## Tracing
# -- https://doc.traefik.io/traefik/observability/tracing/overview/
tracing:  # @schema additionalProperties: false
  # -- Enables tracing for internal resources. Default: false.
  addInternals: true
  # # -- Service name used in selected backend. Default: traefik.
  # serviceName:  # @schema type:[string, null]
  # # -- Defines additional resource attributes to be sent to the collector.
  # resourceAttributes: {}
  # # -- Defines the list of request headers to add as attributes. It applies to client and server kind spans.
  # capturedRequestHeaders: []
  # # -- Defines the list of response headers to add as attributes. It applies to client and server kind spans.
  # capturedResponseHeaders: []
  # # -- By default, all query parameters are redacted. Defines the list of query parameters to not redact.
  # safeQueryParams: []
  # # -- The proportion of requests to trace, specified between 0.0 and 1.0. Default: 1.0.
  # sampleRate:  # @schema type:[number, null]; minimum:0; maximum:1
  otlp:
    # -- See https://doc.traefik.io/traefik/v3.0/observability/tracing/opentelemetry/
    enabled: true
    http:
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      enabled: true
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      endpoint: http://opentelemetry-collector.monitoring.svc.cluster.local:4318/v1/traces
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      # headers: {}
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
      # tls:
        # insecureSkipVerify: true 
    grpc:
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      enabled: false
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      endpoint: ""
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      insecure: false
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
      tls:
        # -- The path to the certificate authority, it defaults to the system bundle.
        ca: ""
        # -- The path to the public certificate. When using this option, setting the key option is required.
        cert: ""
        # -- The path to the private key. When using this option, setting the cert option is required.
        key: ""
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
        insecureSkipVerify: false

autoscaling:
  enabled: false

# -- Whether Role Based Access Control objects like roles and rolebindings should be created
rbac:  # @schema additionalProperties: false
  enabled: true

namespaceOverride: "traefik-system"

